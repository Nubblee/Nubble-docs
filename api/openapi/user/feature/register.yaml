# 사용자 등록
Path:
  post:
    tags:
      - 사용자 API
    summary: 회원가입
    description: 새로운 사용자 계정을 생성합니다
    operationId: registerUser
    requestBody:
      required: true
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/Request'
    responses:
      '201':
        description: 회원가입 성공
        headers:
          Location:
            description: 생성된 사용자 리소스의 URI
            schema:
              type: string
              format: uri
            example: "/users/123"
        content:
          application/vnd.api+json:
            schema:
              $ref: '../user-response.yaml#/Response'
      '400':
        description: 유효하지 않은 입력값
        content:
          application/problem+json:
            schema:
              $ref: '../../error/responses.yaml#/ValidationError'
            examples:
              invalid-login-id:
                summary: 유효하지 않은 사용자명
                value:
                  type: "https://example.com/problems/validation-error"
                  title: "유효성 검사 오류"
                  status: 400
                  detail: "입력하신 값이 유효성 검사 규칙을 위반했습니다"
                  errors:
                    - field: "loginId"
                      message: "사용자명은 영문자, 숫자만 포함할 수 있습니다"
              invalid-password:
                summary: 유효하지 않은 비밀번호
                value:
                  type: "https://example.com/problems/validation-error"
                  title: "유효성 검사 오류"
                  status: 400
                  detail: "입력하신 비밀번호가 보안 요구사항을 충족하지 않습니다"
                  errors:
                    - field: "password"
                      message: "비밀번호는 최소 8자 이상이어야 합니다."
      '409':
        description: 이미 존재하는 사용자명 또는 이메일
        content:
          application/problem+json:
            schema:
              $ref: '../../error/responses.yaml#/ConflictError'
            examples:
              login-id-conflict:
                summary: 사용자명 중복
                value:
                  type: "https://example.com/problems/resource-conflict"
                  title: "리소스 충돌"
                  status: 409
                  detail: "입력하신 사용자명(hongkildong)은 이미 사용 중입니다"
                  instance: "/users"
                  conflictField: "loginId"
                  conflictValue: "hongkildong"
                  resourceType: "user"
              email-conflict:
                summary: 이메일 중복
                value:
                  type: "https://example.com/problems/resource-conflict"
                  title: "리소스 충돌"
                  status: 409
                  detail: "입력하신 이메일(hongkildong@example.com)은 이미 등록되어 있습니다"
                  instance: "/users"
                  conflictField: "email"
                  conflictValue: "hongkildong@example.com"
                  resourceType: "user"


Request:
  allOf:
    - $ref: '../../jsonapi/requests.yaml#/CreateResourceRequest'
    - type: object
      properties:
        data:
          type: object
          properties:
            type:
              $ref: '../type.yaml#/Type'
            attributes:
              type: object
              description: 사용자 등록 시 필요한 속성
              properties:
                loginId:
                  $ref: '../attributes.yaml#/LoginId'
                email:
                  $ref: '../attributes.yaml#/Email'
                password:
                  $ref: '../attributes.yaml#/Password'
                nickname:
                  $ref: '../attributes.yaml#/Nickname'
                preferredRegion:
                  $ref: '../attributes.yaml#/PreferredRegion'
              required:
                - loginId
                - password
                - nickname
              additionalProperties: false
          required:
            - type
            - attributes
          additionalProperties: false
      required:
        - data
      additionalProperties: false
