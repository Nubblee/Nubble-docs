Post:
  tags:
    - Problem API
  summary: 코딩테스트 문제 등록
  description: |
    스터디에 새로운 코딩테스트 문제를 등록합니다.
    
    - 스터디장만 문제를 등록할 수 있습니다
    - 종료된(ENDED) 스터디에는 문제를 등록할 수 없습니다
    - 등록된 문제는 스터디의 모든 멤버에게 공개됩니다
    - 문제는 등록과 동시에 '등록됨(REGISTERED)' 상태가 됩니다
  operationId: registerProblem
  parameters:
    - name: studyGroupId
      in: path
      required: true
      description: 문제를 등록할 스터디 그룹의 고유 식별자
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/vnd.api+json:
        schema:
          $ref: '#/Request'
  responses:
    '201':
      description: 문제 등록 성공
      headers:
        Location:
          description: 등록된 문제 리소스의 URI
          schema:
            type: string
            format: uri
          example: "/study-groups/123/problems/456"
      content:
        application/vnd.api+json:
          schema:
            $ref: '../resource.yaml#/MainResource'
    '400':
      description: 유효하지 않은 입력값
      content:
        application/problem+json:
          schema:
            $ref: '../../error/types.yaml#/ValidationError'
    '401':
      description: 인증되지 않은 요청
      content:
        application/problem+json:
          schema:
            $ref: '../../error/types.yaml#/UnauthenticatedError'
    '403':
      description: 권한 없음 (스터디장이 아닌 경우 또는 종료된 스터디인 경우)
      content:
        application/problem+json:
          schema:
            allOf:
              - $ref: '../../error/types.yaml#/ForbiddenError'
              - type: object
                properties:
                  detail:
                    type: string
                    examples:
                      unauthorized: "스터디장만 문제를 등록할 수 있습니다"
                      ended: "종료된 스터디에는 문제를 등록할 수 없습니다"
    '404':
      description: 스터디 그룹을 찾을 수 없음
      content:
        application/problem+json:
          schema:
            $ref: '../../error/types.yaml#/NotFoundError'

Request:
  type: object
  properties:
    data:
      type: object
      properties:
        type:
          $ref: '../identifier.yaml#/Type'
        attributes:
          type: object
          properties:
            title:
              $ref: '../attribute.yaml#/Title'
            url:
              $ref: '../attribute.yaml#/Url'
            description:
              $ref: '../attribute.yaml#/Description'
            memo:
              $ref: '../attribute.yaml#/Memo'
          required:
            - title
            - url
          additionalProperties: false
      required:
        - type
        - attributes
      additionalProperties: false
  required:
    - data
  additionalProperties: false
